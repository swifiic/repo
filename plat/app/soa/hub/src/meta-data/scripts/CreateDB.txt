
CREATE DATABASE apphub;

CREATE USER 'bits'@'localhost' IDENTIFIED BY 'fixit';
GRANT ALL PRIVILEGES ON apphub.* TO 'bits'@'localhost';


GRANT USAGE ON apphub.* TO 'bits'@'localhost' IDENTIFIED BY 'fixit';

use apphub;


/* Ledgers are for accounting : most communication responses will include a 
   reference to either OperatorLedger or AppLedger
   Operator Ledger is primarily for AppHub accounting and consistency
   E.g. Adding a new user, Re-charge of accounts, setting App Credit limits etc. 
   
   Each SWiFiIC operation ends up hitting either OperatorLedger or AppLedger (minimum once)
   
   Periodically (possibly hourly) Audit runs, close off (garbage collect) completed info
   and abort timed-out transactions (e.g. pending for > 1 week).
*/

CREATE TABLE OperatorLedger 
/* user additions + credits - i.e. Operator has physical interaction with real world */
/* access to this table should be limited i.e. do not use GRANT *.* - TBD XXX */
(
LogId BIGINT UNSIGNED AUTO_INCREMENT,
EventNotes VARCHAR(256),
ReqUserId INT,
ReqDeviceId INT,
CreditDeviceId INT,
DebitDeviceId INT,
Details VARCHAR(1024),
Time TIMESTAMP,
AuditLogId BIGINT,
AuditNotes BIGINT,
PRIMARY KEY (LogId)
);

CREATE TABLE AppLedger 
(
LogId BIGINT UNSIGNED AUTO_INCREMENT,
EventNotes VARCHAR(256),
ReqUserId INT,
ReqAppId INT,
ReqAppRole VARCHAR(64),
ReqDeviceId INT,
CreditDeviceId INT,
DebitDeviceId INT,
Details VARCHAR(1024),
TimeReq TIMESTAMP,
TimeCommitted TIMESTAMP,
ReqOrCommitID BIGINT,
DevSeqId BIGINT,
Value INT,
Status ENUM('audited','success', 'failed', 'aborted', 'commit-pending','ack-pending','others'),
StatusNotes VARCHAR(64), /* especially for others */
AlibiDevDetails VARCHAR(256),
AuditLogId BIGINT,
AuditNotes BIGINT,
PRIMARY KEY (LogId)
);

/* Audit runs like cron jobs, or on user request - e.g. account closure
   All entries in Ledgers are sanitized if pending for too long */
   
CREATE TABLE Audit
(
AuditId BIGINT UNSIGNED AUTO_INCREMENT,
AuditNotes VARCHAR(256),
StartedAt TIMESTAMP,
CompletedAt TIMESTAMP,
FirstAffectedOperatorLogId BIGINT UNSIGNED,
LastAffectedOperatorLogId BIGINT UNSIGNED,
NumAffectedOperatorLogId INT UNSIGNED,
FirstAffectedAppLogId BIGINT UNSIGNED,
LastAffectedAppLogId BIGINT UNSIGNED,
NumAffectedAppLogId INT UNSIGNED,
NumValueTransfers INT UNSIGNED,
TotalValueTransferAmount INT UNSIGNED,
AuditType ENUM('periodic','user-requested','billing','others'),
PRIMARY KEY (AuditId)
);


CREATE TABLE User 
(
UserId INT UNSIGNED AUTO_INCREMENT,
Name VARCHAR(64),
EmailAddress VARCHAR(64),
MobileNumber VARCHAR(32),
Address VARCHAR(256),
ImageFileLocation VARCHAR(64),
AddrProofFileLocation VARCHAR(64),
AddressVerificationNotes VARCHAR(256),
CreateTime DATETIME,
CreatedLedgerId BIGINT,
RemainingCreditPostAudit INT,
Status ENUM('active', 'suspended', 'deleted', 'operator'), /* at least one operator should exists */
Password VARCHAR(128),
LastAuditedActiveityAt TIMESTAMP,
PRIMARY KEY (UserId)
);

CREATE TABLE Device 
(
DeviceID INT AUTO_INCREMENT,
MAC VARCHAR(64),
UserId INT,
CreatedLedgerEntry BIGINT,
Notes VARCHAR(64),
CreateTime DATETIME,
PeriodicAuditTime TIMESTAMP,
PeriodicAuditNotes VARCHAR(256),
LastAuditedActiveityAt TIMESTAMP,
PRIMARY KEY (DeviceId)
);

CREATE TABLE App
(
AppId VARCHAR(64),
AppName VARCHAR(64),
PRIMARY KEY (AppId)
);

CREATE TABLE AppUserMaps
(
AppId VARCHAR(64),
UserId INT,
Role VARCHAR(64), /* May need Revisit */
PRIMARY KEY (AppId,UserId,Role)
);


